//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Neo.ApplicationFramework.Generated
{
	using Neo.ApplicationFramework.Tools.Actions;
	
	
	public partial class LicenseRootComponent : Neo.ApplicationFramework.Tools.License.LicenseRootComponent, Neo.ApplicationFramework.Interfaces.ISupportMultiLanguage
	{
		
		public LicenseRootComponent()
		{
			this.InitializeComponent();
			this.ApplyLanguageInternal();
		}
		
		private void InitializeComponent()
		{
			Neo.ApplicationFramework.Tools.License.PanelHardwareIdList PanelHardwareIdList1 = new Neo.ApplicationFramework.Tools.License.PanelHardwareIdList();
			Neo.ApplicationFramework.Tools.License.PanelHardwareIdList PanelHardwareIdList2 = new Neo.ApplicationFramework.Tools.License.PanelHardwareIdList();
			Neo.ApplicationFramework.Tools.License.PanelHardwareIdList PanelHardwareIdList3 = new Neo.ApplicationFramework.Tools.License.PanelHardwareIdList();
			Neo.ApplicationFramework.Tools.License.PanelHardwareIdList PanelHardwareIdList4 = new Neo.ApplicationFramework.Tools.License.PanelHardwareIdList();
			Neo.ApplicationFramework.Tools.License.PanelHardwareIdList PanelHardwareIdList5 = new Neo.ApplicationFramework.Tools.License.PanelHardwareIdList();
			Neo.ApplicationFramework.Tools.License.PanelHardwareIdList PanelHardwareIdList6 = new Neo.ApplicationFramework.Tools.License.PanelHardwareIdList();
			Neo.ApplicationFramework.Tools.License.PanelHardwareIdList PanelHardwareIdList7 = new Neo.ApplicationFramework.Tools.License.PanelHardwareIdList();
			Neo.ApplicationFramework.Tools.License.PanelHardwareIdList PanelHardwareIdList8 = new Neo.ApplicationFramework.Tools.License.PanelHardwareIdList();
			Neo.ApplicationFramework.Tools.License.PanelHardwareIdList PanelHardwareIdList9 = new Neo.ApplicationFramework.Tools.License.PanelHardwareIdList();
			// 
			// LicenseRootComponent
			// 
			this.IsRc = true;
			PanelHardwareIdList1.IdList.Add(220);
			PanelHardwareIdList1.IdList.Add(222);
			PanelHardwareIdList1.IdList.Add(223);
			PanelHardwareIdList1.IdList.Add(224);
			PanelHardwareIdList2.IdList.Add(74);
			PanelHardwareIdList2.IdList.Add(74);
			PanelHardwareIdList2.IdList.Add(74);
			PanelHardwareIdList2.IdList.Add(74);
			PanelHardwareIdList2.IdList.Add(74);
			PanelHardwareIdList2.IdList.Add(74);
			PanelHardwareIdList2.IdList.Add(74);
			PanelHardwareIdList2.IdList.Add(74);
			PanelHardwareIdList3.IdList.Add(23);
			PanelHardwareIdList3.IdList.Add(24);
			PanelHardwareIdList3.IdList.Add(25);
			PanelHardwareIdList3.IdList.Add(32);
			PanelHardwareIdList3.IdList.Add(33);
			PanelHardwareIdList3.IdList.Add(34);
			PanelHardwareIdList3.IdList.Add(37);
			PanelHardwareIdList4.IdList.Add(35);
			PanelHardwareIdList4.IdList.Add(36);
			PanelHardwareIdList4.IdList.Add(59);
			PanelHardwareIdList4.IdList.Add(65);
			PanelHardwareIdList4.IdList.Add(86);
			PanelHardwareIdList5.IdList.Add(26);
			PanelHardwareIdList5.IdList.Add(27);
			PanelHardwareIdList5.IdList.Add(28);
			PanelHardwareIdList5.IdList.Add(38);
			PanelHardwareIdList5.IdList.Add(39);
			PanelHardwareIdList5.IdList.Add(40);
			PanelHardwareIdList5.IdList.Add(41);
			PanelHardwareIdList5.IdList.Add(42);
			PanelHardwareIdList5.IdList.Add(43);
			PanelHardwareIdList5.IdList.Add(47);
			PanelHardwareIdList5.IdList.Add(48);
			PanelHardwareIdList5.IdList.Add(48);
			PanelHardwareIdList6.IdList.Add(29);
			PanelHardwareIdList6.IdList.Add(30);
			PanelHardwareIdList6.IdList.Add(31);
			PanelHardwareIdList7.IdList.Add(35);
			PanelHardwareIdList7.IdList.Add(59);
			PanelHardwareIdList7.IdList.Add(65);
			PanelHardwareIdList7.IdList.Add(86);
			PanelHardwareIdList8.IdList.Add(18);
			PanelHardwareIdList8.IdList.Add(19);
			PanelHardwareIdList9.IdList.Add(78);
			PanelHardwareIdList9.IdList.Add(79);
			PanelHardwareIdList9.IdList.Add(80);
			PanelHardwareIdList9.IdList.Add(128);
			PanelHardwareIdList9.IdList.Add(129);
			PanelHardwareIdList9.IdList.Add(130);
			PanelHardwareIdList9.IdList.Add(131);
			PanelHardwareIdList9.IdList.Add(132);
			PanelHardwareIdList9.IdList.Add(133);
			PanelHardwareIdList9.IdList.Add(134);
			PanelHardwareIdList9.IdList.Add(135);
			PanelHardwareIdList9.IdList.Add(137);
			PanelHardwareIdList9.IdList.Add(138);
			PanelHardwareIdList9.IdList.Add(139);
			PanelHardwareIdList9.IdList.Add(140);
			PanelHardwareIdList9.IdList.Add(141);
			PanelHardwareIdList9.IdList.Add(142);
			PanelHardwareIdList9.IdList.Add(143);
			PanelHardwareIdList9.IdList.Add(144);
			PanelHardwareIdList9.IdList.Add(145);
			PanelHardwareIdList9.IdList.Add(148);
			PanelHardwareIdList9.IdList.Add(149);
			PanelHardwareIdList9.IdList.Add(150);
			PanelHardwareIdList9.IdList.Add(151);
			PanelHardwareIdList9.IdList.Add(152);
			PanelHardwareIdList9.IdList.Add(153);
			PanelHardwareIdList9.IdList.Add(154);
			PanelHardwareIdList9.IdList.Add(155);
			PanelHardwareIdList9.IdList.Add(156);
			PanelHardwareIdList9.IdList.Add(157);
			PanelHardwareIdList9.IdList.Add(180);
			PanelHardwareIdList9.IdList.Add(181);
			PanelHardwareIdList9.IdList.Add(182);
			PanelHardwareIdList9.IdList.Add(184);
			PanelHardwareIdList9.IdList.Add(185);
			PanelHardwareIdList9.IdList.Add(187);
			PanelHardwareIdList9.IdList.Add(188);
			PanelHardwareIdList9.IdList.Add(189);
			PanelHardwareIdList9.IdList.Add(190);
			PanelHardwareIdList9.IdList.Add(192);
			PanelHardwareIdList9.IdList.Add(193);
			PanelHardwareIdList9.IdList.Add(195);
			PanelHardwareIdList9.IdList.Add(196);
			PanelHardwareIdList9.IdList.Add(197);
			PanelHardwareIdList9.IdList.Add(199);
			PanelHardwareIdList9.IdList.Add(200);
			this.PanelHardwareIDs.Add(Neo.ApplicationFramework.Interfaces.PanelTypeGroup.BoX2, PanelHardwareIdList1);
			this.PanelHardwareIDs.Add(Neo.ApplicationFramework.Interfaces.PanelTypeGroup.PC, PanelHardwareIdList2);
			this.PanelHardwareIDs.Add(Neo.ApplicationFramework.Interfaces.PanelTypeGroup.TxA, PanelHardwareIdList3);
			this.PanelHardwareIDs.Add(Neo.ApplicationFramework.Interfaces.PanelTypeGroup.TxE, PanelHardwareIdList4);
			this.PanelHardwareIDs.Add(Neo.ApplicationFramework.Interfaces.PanelTypeGroup.TxB, PanelHardwareIdList5);
			this.PanelHardwareIDs.Add(Neo.ApplicationFramework.Interfaces.PanelTypeGroup.TxC, PanelHardwareIdList6);
			this.PanelHardwareIDs.Add(Neo.ApplicationFramework.Interfaces.PanelTypeGroup.TxF, PanelHardwareIdList7);
			this.PanelHardwareIDs.Add(Neo.ApplicationFramework.Interfaces.PanelTypeGroup.QTermAx, PanelHardwareIdList8);
			this.PanelHardwareIDs.Add(Neo.ApplicationFramework.Interfaces.PanelTypeGroup.X2, PanelHardwareIdList9);
			this.ProductFamilyRegistryPath = "SOFTWARE\\Beijer Electronics AB\\iX Developer 2.40 SP2\\Install";
			this.ProjectPanelName = "X2 base 5";
			this.ProjectPanelTypeGroup = Neo.ApplicationFramework.Interfaces.PanelTypeGroup.X2;
			this.ConnectDataBindings();
		}
		
		protected override void Dispose(bool disposing)
		{
			base.Dispose(disposing);
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		public virtual void ConnectDataBindings()
		{
		}
		
		private void InitializeObjectCreations()
		{
		}
		
		private void InitializeBeginInits()
		{
		}
		
		private void InitializeEndInits()
		{
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		private void ApplyLanguageInternal()
		{
			Neo.ApplicationFramework.Tools.MultiLanguage.MultiLanguageResourceManager resources = new Neo.ApplicationFramework.Tools.MultiLanguage.MultiLanguageResourceManager(typeof(LicenseRootComponent));
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		void Neo.ApplicationFramework.Interfaces.ISupportMultiLanguage.ApplyLanguage()
		{
			this.ApplyLanguage();
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		protected virtual void ApplyLanguage()
		{
			this.ApplyLanguageInternal();
		}
	}
}
